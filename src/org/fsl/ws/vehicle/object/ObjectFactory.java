//
// Generated By:JAX-WS RI IBM 2.2.1-11/28/2011 08:28 AM(foreman)- (JAXB RI IBM 2.2.3-07/05/2013 05:25 AM(foreman)-)
//


package org.fsl.ws.vehicle.object;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.fsl.ws.vehicle.object package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.fsl.ws.vehicle.object
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link VehMvrc }
     * 
     */
    public VehMvrc createVehMvrc() {
        return new VehMvrc();
    }

    /**
     * Create an instance of {@link VehOwner }
     * 
     */
    public VehOwner createVehOwner() {
        return new VehOwner();
    }

    /**
     * Create an instance of {@link VehFitness }
     * 
     */
    public VehFitness createVehFitness() {
        return new VehFitness();
    }

    /**
     * Create an instance of {@link ArrayOfVehOwner }
     * 
     */
    public ArrayOfVehOwner createArrayOfVehOwner() {
        return new ArrayOfVehOwner();
    }

    /**
     * Create an instance of {@link VehInsurance }
     * 
     */
    public VehInsurance createVehInsurance() {
        return new VehInsurance();
    }

    /**
     * Create an instance of {@link VehInfo }
     * 
     */
    public VehInfo createVehInfo() {
        return new VehInfo();
    }

    /**
     * Create an instance of {@link Vehicle }
     * 
     */
    public Vehicle createVehicle() {
        return new Vehicle();
    }

}
